#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLKS")]
	public partial class DBQuanLyKhachSanDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDatPhong(ChiTietDatPhong instance);
    partial void UpdateChiTietDatPhong(ChiTietDatPhong instance);
    partial void DeleteChiTietDatPhong(ChiTietDatPhong instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertChiTietHoaDon(ChiTietHoaDon instance);
    partial void UpdateChiTietHoaDon(ChiTietHoaDon instance);
    partial void DeleteChiTietHoaDon(ChiTietHoaDon instance);
    partial void InsertCoSoVatChat(CoSoVatChat instance);
    partial void UpdateCoSoVatChat(CoSoVatChat instance);
    partial void DeleteCoSoVatChat(CoSoVatChat instance);
    partial void InsertDanhSachSuDungDichVu(DanhSachSuDungDichVu instance);
    partial void UpdateDanhSachSuDungDichVu(DanhSachSuDungDichVu instance);
    partial void DeleteDanhSachSuDungDichVu(DanhSachSuDungDichVu instance);
    partial void InsertDatPhong(DatPhong instance);
    partial void UpdateDatPhong(DatPhong instance);
    partial void DeleteDatPhong(DatPhong instance);
    partial void InsertDichVu(DichVu instance);
    partial void UpdateDichVu(DichVu instance);
    partial void DeleteDichVu(DichVu instance);
    partial void InsertDoanhThu(DoanhThu instance);
    partial void UpdateDoanhThu(DoanhThu instance);
    partial void DeleteDoanhThu(DoanhThu instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiDichVu(LoaiDichVu instance);
    partial void UpdateLoaiDichVu(LoaiDichVu instance);
    partial void DeleteLoaiDichVu(LoaiDichVu instance);
    partial void InsertLoaiPhong(LoaiPhong instance);
    partial void UpdateLoaiPhong(LoaiPhong instance);
    partial void DeleteLoaiPhong(LoaiPhong instance);
    partial void InsertLuong(Luong instance);
    partial void UpdateLuong(Luong instance);
    partial void DeleteLuong(Luong instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertTraPhong(TraPhong instance);
    partial void UpdateTraPhong(TraPhong instance);
    partial void DeleteTraPhong(TraPhong instance);
    #endregion
		
		public DBQuanLyKhachSanDataContext() : 
				base(global::DAO.Properties.Settings.Default.QLKSConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DBQuanLyKhachSanDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBQuanLyKhachSanDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBQuanLyKhachSanDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBQuanLyKhachSanDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDatPhong> ChiTietDatPhongs
		{
			get
			{
				return this.GetTable<ChiTietDatPhong>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this.GetTable<ChiTietHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<CoSoVatChat> CoSoVatChats
		{
			get
			{
				return this.GetTable<CoSoVatChat>();
			}
		}
		
		public System.Data.Linq.Table<DanhSachSuDungDichVu> DanhSachSuDungDichVus
		{
			get
			{
				return this.GetTable<DanhSachSuDungDichVu>();
			}
		}
		
		public System.Data.Linq.Table<DatPhong> DatPhongs
		{
			get
			{
				return this.GetTable<DatPhong>();
			}
		}
		
		public System.Data.Linq.Table<DichVu> DichVus
		{
			get
			{
				return this.GetTable<DichVu>();
			}
		}
		
		public System.Data.Linq.Table<DoanhThu> DoanhThus
		{
			get
			{
				return this.GetTable<DoanhThu>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiDichVu> LoaiDichVus
		{
			get
			{
				return this.GetTable<LoaiDichVu>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhong> LoaiPhongs
		{
			get
			{
				return this.GetTable<LoaiPhong>();
			}
		}
		
		public System.Data.Linq.Table<Luong> Luongs
		{
			get
			{
				return this.GetTable<Luong>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<TraPhong> TraPhongs
		{
			get
			{
				return this.GetTable<TraPhong>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDatPhong")]
	public partial class ChiTietDatPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaChiTietDatPhong;
		
		private string _MaDatPhong;
		
		private string _MaKhachHang;
		
		private string _MaPhong;
		
		private string _MaLoaiPhong;
		
		private string _TinhTrang;
		
		private System.Nullable<double> _GiaMoiDem;
		
		private System.Nullable<int> _SoLuongPhong;
		
		private System.Nullable<double> _TongGia;
		
		private string _PhuongThucThanhToan;
		
		private System.Nullable<System.DateTime> _NgayNhanPhong;
		
		private System.Nullable<System.DateTime> _NgayTraPhong;
		
		private EntityRef<DatPhong> _DatPhong;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<LoaiPhong> _LoaiPhong;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietDatPhongChanging(string value);
    partial void OnMaChiTietDatPhongChanged();
    partial void OnMaDatPhongChanging(string value);
    partial void OnMaDatPhongChanged();
    partial void OnMaKhachHangChanging(string value);
    partial void OnMaKhachHangChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnMaLoaiPhongChanging(string value);
    partial void OnMaLoaiPhongChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnGiaMoiDemChanging(System.Nullable<double> value);
    partial void OnGiaMoiDemChanged();
    partial void OnSoLuongPhongChanging(System.Nullable<int> value);
    partial void OnSoLuongPhongChanged();
    partial void OnTongGiaChanging(System.Nullable<double> value);
    partial void OnTongGiaChanged();
    partial void OnPhuongThucThanhToanChanging(string value);
    partial void OnPhuongThucThanhToanChanged();
    partial void OnNgayNhanPhongChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhanPhongChanged();
    partial void OnNgayTraPhongChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraPhongChanged();
    #endregion
		
		public ChiTietDatPhong()
		{
			this._DatPhong = default(EntityRef<DatPhong>);
			this._KhachHang = default(EntityRef<KhachHang>);
			this._LoaiPhong = default(EntityRef<LoaiPhong>);
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietDatPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaChiTietDatPhong
		{
			get
			{
				return this._MaChiTietDatPhong;
			}
			set
			{
				if ((this._MaChiTietDatPhong != value))
				{
					this.OnMaChiTietDatPhongChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietDatPhong = value;
					this.SendPropertyChanged("MaChiTietDatPhong");
					this.OnMaChiTietDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatPhong", DbType="NVarChar(10)")]
		public string MaDatPhong
		{
			get
			{
				return this._MaDatPhong;
			}
			set
			{
				if ((this._MaDatPhong != value))
				{
					if (this._DatPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._MaDatPhong = value;
					this.SendPropertyChanged("MaDatPhong");
					this.OnMaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="NVarChar(10)")]
		public string MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NVarChar(10)")]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiPhong", DbType="NVarChar(10)")]
		public string MaLoaiPhong
		{
			get
			{
				return this._MaLoaiPhong;
			}
			set
			{
				if ((this._MaLoaiPhong != value))
				{
					if (this._LoaiPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiPhong = value;
					this.SendPropertyChanged("MaLoaiPhong");
					this.OnMaLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(50)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaMoiDem", DbType="Float")]
		public System.Nullable<double> GiaMoiDem
		{
			get
			{
				return this._GiaMoiDem;
			}
			set
			{
				if ((this._GiaMoiDem != value))
				{
					this.OnGiaMoiDemChanging(value);
					this.SendPropertyChanging();
					this._GiaMoiDem = value;
					this.SendPropertyChanged("GiaMoiDem");
					this.OnGiaMoiDemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongPhong", DbType="Int")]
		public System.Nullable<int> SoLuongPhong
		{
			get
			{
				return this._SoLuongPhong;
			}
			set
			{
				if ((this._SoLuongPhong != value))
				{
					this.OnSoLuongPhongChanging(value);
					this.SendPropertyChanging();
					this._SoLuongPhong = value;
					this.SendPropertyChanged("SoLuongPhong");
					this.OnSoLuongPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongGia", DbType="Float")]
		public System.Nullable<double> TongGia
		{
			get
			{
				return this._TongGia;
			}
			set
			{
				if ((this._TongGia != value))
				{
					this.OnTongGiaChanging(value);
					this.SendPropertyChanging();
					this._TongGia = value;
					this.SendPropertyChanged("TongGia");
					this.OnTongGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucThanhToan", DbType="NVarChar(100)")]
		public string PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan;
			}
			set
			{
				if ((this._PhuongThucThanhToan != value))
				{
					this.OnPhuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucThanhToan = value;
					this.SendPropertyChanged("PhuongThucThanhToan");
					this.OnPhuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhanPhong", DbType="Date")]
		public System.Nullable<System.DateTime> NgayNhanPhong
		{
			get
			{
				return this._NgayNhanPhong;
			}
			set
			{
				if ((this._NgayNhanPhong != value))
				{
					this.OnNgayNhanPhongChanging(value);
					this.SendPropertyChanging();
					this._NgayNhanPhong = value;
					this.SendPropertyChanged("NgayNhanPhong");
					this.OnNgayNhanPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTraPhong", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTraPhong
		{
			get
			{
				return this._NgayTraPhong;
			}
			set
			{
				if ((this._NgayTraPhong != value))
				{
					this.OnNgayTraPhongChanging(value);
					this.SendPropertyChanging();
					this._NgayTraPhong = value;
					this.SendPropertyChanged("NgayTraPhong");
					this.OnNgayTraPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_ChiTietDatPhong", Storage="_DatPhong", ThisKey="MaDatPhong", OtherKey="MaDatPhong", IsForeignKey=true)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.ChiTietDatPhongs.Remove(this);
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatPhongs.Add(this);
						this._MaDatPhong = value.MaDatPhong;
					}
					else
					{
						this._MaDatPhong = default(string);
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietDatPhong", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.ChiTietDatPhongs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatPhongs.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_ChiTietDatPhong", Storage="_LoaiPhong", ThisKey="MaLoaiPhong", OtherKey="MaLoaiPhong", IsForeignKey=true)]
		public LoaiPhong LoaiPhong
		{
			get
			{
				return this._LoaiPhong.Entity;
			}
			set
			{
				LoaiPhong previousValue = this._LoaiPhong.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhong.Entity = null;
						previousValue.ChiTietDatPhongs.Remove(this);
					}
					this._LoaiPhong.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatPhongs.Add(this);
						this._MaLoaiPhong = value.MaLoaiPhong;
					}
					else
					{
						this._MaLoaiPhong = default(string);
					}
					this.SendPropertyChanged("LoaiPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_ChiTietDatPhong", Storage="_Phong", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.ChiTietDatPhongs.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatPhongs.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _PassWordd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWorddChanging(string value);
    partial void OnPassWorddChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWordd", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PassWordd
		{
			get
			{
				return this._PassWordd;
			}
			set
			{
				if ((this._PassWordd != value))
				{
					this.OnPassWorddChanging(value);
					this.SendPropertyChanging();
					this._PassWordd = value;
					this.SendPropertyChanged("PassWordd");
					this.OnPassWorddChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDon")]
	public partial class ChiTietHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHoaDon;
		
		private string _MaDatPhong;
		
		private string _MaSuDungDichVu;
		
		private System.Nullable<double> _PhuThu;
		
		private System.Nullable<double> _TienPhong;
		
		private System.Nullable<double> _TienDichVu;
		
		private System.Nullable<double> _GiamGiaKH;
		
		private string _HinhThucThanhToan;
		
		private System.Nullable<double> _SoNgay;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<DanhSachSuDungDichVu> _DanhSachSuDungDichVu;
		
		private EntityRef<DatPhong> _DatPhong;
		
		private EntityRef<HoaDon> _HoaDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(string value);
    partial void OnMaHoaDonChanged();
    partial void OnMaDatPhongChanging(string value);
    partial void OnMaDatPhongChanged();
    partial void OnMaSuDungDichVuChanging(string value);
    partial void OnMaSuDungDichVuChanged();
    partial void OnPhuThuChanging(System.Nullable<double> value);
    partial void OnPhuThuChanged();
    partial void OnTienPhongChanging(System.Nullable<double> value);
    partial void OnTienPhongChanged();
    partial void OnTienDichVuChanging(System.Nullable<double> value);
    partial void OnTienDichVuChanged();
    partial void OnGiamGiaKHChanging(System.Nullable<double> value);
    partial void OnGiamGiaKHChanged();
    partial void OnHinhThucThanhToanChanging(string value);
    partial void OnHinhThucThanhToanChanged();
    partial void OnSoNgayChanging(System.Nullable<double> value);
    partial void OnSoNgayChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public ChiTietHoaDon()
		{
			this._DanhSachSuDungDichVu = default(EntityRef<DanhSachSuDungDichVu>);
			this._DatPhong = default(EntityRef<DatPhong>);
			this._HoaDon = default(EntityRef<HoaDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MaDatPhong
		{
			get
			{
				return this._MaDatPhong;
			}
			set
			{
				if ((this._MaDatPhong != value))
				{
					if (this._DatPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._MaDatPhong = value;
					this.SendPropertyChanged("MaDatPhong");
					this.OnMaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSuDungDichVu", DbType="NVarChar(10)")]
		public string MaSuDungDichVu
		{
			get
			{
				return this._MaSuDungDichVu;
			}
			set
			{
				if ((this._MaSuDungDichVu != value))
				{
					if (this._DanhSachSuDungDichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSuDungDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaSuDungDichVu = value;
					this.SendPropertyChanged("MaSuDungDichVu");
					this.OnMaSuDungDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuThu", DbType="Float")]
		public System.Nullable<double> PhuThu
		{
			get
			{
				return this._PhuThu;
			}
			set
			{
				if ((this._PhuThu != value))
				{
					this.OnPhuThuChanging(value);
					this.SendPropertyChanging();
					this._PhuThu = value;
					this.SendPropertyChanged("PhuThu");
					this.OnPhuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienPhong", DbType="Float")]
		public System.Nullable<double> TienPhong
		{
			get
			{
				return this._TienPhong;
			}
			set
			{
				if ((this._TienPhong != value))
				{
					this.OnTienPhongChanging(value);
					this.SendPropertyChanging();
					this._TienPhong = value;
					this.SendPropertyChanged("TienPhong");
					this.OnTienPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienDichVu", DbType="Float")]
		public System.Nullable<double> TienDichVu
		{
			get
			{
				return this._TienDichVu;
			}
			set
			{
				if ((this._TienDichVu != value))
				{
					this.OnTienDichVuChanging(value);
					this.SendPropertyChanging();
					this._TienDichVu = value;
					this.SendPropertyChanged("TienDichVu");
					this.OnTienDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiamGiaKH", DbType="Float")]
		public System.Nullable<double> GiamGiaKH
		{
			get
			{
				return this._GiamGiaKH;
			}
			set
			{
				if ((this._GiamGiaKH != value))
				{
					this.OnGiamGiaKHChanging(value);
					this.SendPropertyChanging();
					this._GiamGiaKH = value;
					this.SendPropertyChanged("GiamGiaKH");
					this.OnGiamGiaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhThucThanhToan", DbType="NVarChar(100)")]
		public string HinhThucThanhToan
		{
			get
			{
				return this._HinhThucThanhToan;
			}
			set
			{
				if ((this._HinhThucThanhToan != value))
				{
					this.OnHinhThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._HinhThucThanhToan = value;
					this.SendPropertyChanged("HinhThucThanhToan");
					this.OnHinhThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNgay", DbType="Float")]
		public System.Nullable<double> SoNgay
		{
			get
			{
				return this._SoNgay;
			}
			set
			{
				if ((this._SoNgay != value))
				{
					this.OnSoNgayChanging(value);
					this.SendPropertyChanging();
					this._SoNgay = value;
					this.SendPropertyChanged("SoNgay");
					this.OnSoNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhSachSuDungDichVu_ChiTietHoaDon", Storage="_DanhSachSuDungDichVu", ThisKey="MaSuDungDichVu", OtherKey="MaSuDungDichVu", IsForeignKey=true)]
		public DanhSachSuDungDichVu DanhSachSuDungDichVu
		{
			get
			{
				return this._DanhSachSuDungDichVu.Entity;
			}
			set
			{
				DanhSachSuDungDichVu previousValue = this._DanhSachSuDungDichVu.Entity;
				if (((previousValue != value) 
							|| (this._DanhSachSuDungDichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhSachSuDungDichVu.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._DanhSachSuDungDichVu.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._MaSuDungDichVu = value.MaSuDungDichVu;
					}
					else
					{
						this._MaSuDungDichVu = default(string);
					}
					this.SendPropertyChanged("DanhSachSuDungDichVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_ChiTietHoaDon", Storage="_DatPhong", ThisKey="MaDatPhong", OtherKey="MaDatPhong", IsForeignKey=true)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._MaDatPhong = value.MaDatPhong;
					}
					else
					{
						this._MaDatPhong = default(string);
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_HoaDon", ThisKey="MaHoaDon", OtherKey="MaHoaDon", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChiTietHoaDon = null;
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDon = this;
						this._MaHoaDon = value.MaHoaDon;
					}
					else
					{
						this._MaHoaDon = default(string);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoSoVatChat")]
	public partial class CoSoVatChat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhong;
		
		private string _MaCoSoVatChat;
		
		private string _TenCoSoVatChat;
		
		private string _MoTa;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnMaCoSoVatChatChanging(string value);
    partial void OnMaCoSoVatChatChanged();
    partial void OnTenCoSoVatChatChanging(string value);
    partial void OnTenCoSoVatChatChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public CoSoVatChat()
		{
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCoSoVatChat", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCoSoVatChat
		{
			get
			{
				return this._MaCoSoVatChat;
			}
			set
			{
				if ((this._MaCoSoVatChat != value))
				{
					this.OnMaCoSoVatChatChanging(value);
					this.SendPropertyChanging();
					this._MaCoSoVatChat = value;
					this.SendPropertyChanged("MaCoSoVatChat");
					this.OnMaCoSoVatChatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCoSoVatChat", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenCoSoVatChat
		{
			get
			{
				return this._TenCoSoVatChat;
			}
			set
			{
				if ((this._TenCoSoVatChat != value))
				{
					this.OnTenCoSoVatChatChanging(value);
					this.SendPropertyChanging();
					this._TenCoSoVatChat = value;
					this.SendPropertyChanged("TenCoSoVatChat");
					this.OnTenCoSoVatChatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_CoSoVatChat", Storage="_Phong", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.CoSoVatChats.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.CoSoVatChats.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachSuDungDichVu")]
	public partial class DanhSachSuDungDichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSuDungDichVu;
		
		private string _MaDichVu;
		
		private string _MaDatPhong;
		
		private System.Nullable<int> _SoLuong;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntityRef<DatPhong> _DatPhong;
		
		private EntityRef<DichVu> _DichVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSuDungDichVuChanging(string value);
    partial void OnMaSuDungDichVuChanged();
    partial void OnMaDichVuChanging(string value);
    partial void OnMaDichVuChanged();
    partial void OnMaDatPhongChanging(string value);
    partial void OnMaDatPhongChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public DanhSachSuDungDichVu()
		{
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._DatPhong = default(EntityRef<DatPhong>);
			this._DichVu = default(EntityRef<DichVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSuDungDichVu", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSuDungDichVu
		{
			get
			{
				return this._MaSuDungDichVu;
			}
			set
			{
				if ((this._MaSuDungDichVu != value))
				{
					this.OnMaSuDungDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaSuDungDichVu = value;
					this.SendPropertyChanged("MaSuDungDichVu");
					this.OnMaSuDungDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDichVu", DbType="NVarChar(10)")]
		public string MaDichVu
		{
			get
			{
				return this._MaDichVu;
			}
			set
			{
				if ((this._MaDichVu != value))
				{
					if (this._DichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaDichVu = value;
					this.SendPropertyChanged("MaDichVu");
					this.OnMaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatPhong", DbType="NVarChar(10)")]
		public string MaDatPhong
		{
			get
			{
				return this._MaDatPhong;
			}
			set
			{
				if ((this._MaDatPhong != value))
				{
					if (this._DatPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._MaDatPhong = value;
					this.SendPropertyChanged("MaDatPhong");
					this.OnMaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhSachSuDungDichVu_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="MaSuDungDichVu", OtherKey="MaSuDungDichVu")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_DanhSachSuDungDichVu", Storage="_DatPhong", ThisKey="MaDatPhong", OtherKey="MaDatPhong", IsForeignKey=true)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.DanhSachSuDungDichVus.Remove(this);
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.DanhSachSuDungDichVus.Add(this);
						this._MaDatPhong = value.MaDatPhong;
					}
					else
					{
						this._MaDatPhong = default(string);
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_DanhSachSuDungDichVu", Storage="_DichVu", ThisKey="MaDichVu", OtherKey="MaDichVu", IsForeignKey=true)]
		public DichVu DichVu
		{
			get
			{
				return this._DichVu.Entity;
			}
			set
			{
				DichVu previousValue = this._DichVu.Entity;
				if (((previousValue != value) 
							|| (this._DichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DichVu.Entity = null;
						previousValue.DanhSachSuDungDichVus.Remove(this);
					}
					this._DichVu.Entity = value;
					if ((value != null))
					{
						value.DanhSachSuDungDichVus.Add(this);
						this._MaDichVu = value.MaDichVu;
					}
					else
					{
						this._MaDichVu = default(string);
					}
					this.SendPropertyChanged("DichVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DanhSachSuDungDichVu = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DanhSachSuDungDichVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatPhong")]
	public partial class DatPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDatPhong;
		
		private string _MaKhachHang;
		
		private EntitySet<ChiTietDatPhong> _ChiTietDatPhongs;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntitySet<DanhSachSuDungDichVu> _DanhSachSuDungDichVus;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<TraPhong> _TraPhongs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDatPhongChanging(string value);
    partial void OnMaDatPhongChanged();
    partial void OnMaKhachHangChanging(string value);
    partial void OnMaKhachHangChanged();
    #endregion
		
		public DatPhong()
		{
			this._ChiTietDatPhongs = new EntitySet<ChiTietDatPhong>(new Action<ChiTietDatPhong>(this.attach_ChiTietDatPhongs), new Action<ChiTietDatPhong>(this.detach_ChiTietDatPhongs));
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._DanhSachSuDungDichVus = new EntitySet<DanhSachSuDungDichVu>(new Action<DanhSachSuDungDichVu>(this.attach_DanhSachSuDungDichVus), new Action<DanhSachSuDungDichVu>(this.detach_DanhSachSuDungDichVus));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._TraPhongs = new EntitySet<TraPhong>(new Action<TraPhong>(this.attach_TraPhongs), new Action<TraPhong>(this.detach_TraPhongs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDatPhong
		{
			get
			{
				return this._MaDatPhong;
			}
			set
			{
				if ((this._MaDatPhong != value))
				{
					this.OnMaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._MaDatPhong = value;
					this.SendPropertyChanged("MaDatPhong");
					this.OnMaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="NVarChar(10)")]
		public string MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_ChiTietDatPhong", Storage="_ChiTietDatPhongs", ThisKey="MaDatPhong", OtherKey="MaDatPhong")]
		public EntitySet<ChiTietDatPhong> ChiTietDatPhongs
		{
			get
			{
				return this._ChiTietDatPhongs;
			}
			set
			{
				this._ChiTietDatPhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="MaDatPhong", OtherKey="MaDatPhong")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_DanhSachSuDungDichVu", Storage="_DanhSachSuDungDichVus", ThisKey="MaDatPhong", OtherKey="MaDatPhong")]
		public EntitySet<DanhSachSuDungDichVu> DanhSachSuDungDichVus
		{
			get
			{
				return this._DanhSachSuDungDichVus;
			}
			set
			{
				this._DanhSachSuDungDichVus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_HoaDon", Storage="_HoaDons", ThisKey="MaDatPhong", OtherKey="MaDatPhong")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_TraPhong", Storage="_TraPhongs", ThisKey="MaDatPhong", OtherKey="MaDatPhong")]
		public EntitySet<TraPhong> TraPhongs
		{
			get
			{
				return this._TraPhongs;
			}
			set
			{
				this._TraPhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatPhong", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DatPhongs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DatPhongs.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatPhongs(ChiTietDatPhong entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = this;
		}
		
		private void detach_ChiTietDatPhongs(ChiTietDatPhong entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = null;
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = null;
		}
		
		private void attach_DanhSachSuDungDichVus(DanhSachSuDungDichVu entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = this;
		}
		
		private void detach_DanhSachSuDungDichVus(DanhSachSuDungDichVu entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = null;
		}
		
		private void attach_TraPhongs(TraPhong entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = this;
		}
		
		private void detach_TraPhongs(TraPhong entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DichVu")]
	public partial class DichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDichVu;
		
		private string _MaLoaiDichVu;
		
		private string _TenDichVu;
		
		private double _Gia;
		
		private EntitySet<DanhSachSuDungDichVu> _DanhSachSuDungDichVus;
		
		private EntityRef<LoaiDichVu> _LoaiDichVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDichVuChanging(string value);
    partial void OnMaDichVuChanged();
    partial void OnMaLoaiDichVuChanging(string value);
    partial void OnMaLoaiDichVuChanged();
    partial void OnTenDichVuChanging(string value);
    partial void OnTenDichVuChanged();
    partial void OnGiaChanging(double value);
    partial void OnGiaChanged();
    #endregion
		
		public DichVu()
		{
			this._DanhSachSuDungDichVus = new EntitySet<DanhSachSuDungDichVu>(new Action<DanhSachSuDungDichVu>(this.attach_DanhSachSuDungDichVus), new Action<DanhSachSuDungDichVu>(this.detach_DanhSachSuDungDichVus));
			this._LoaiDichVu = default(EntityRef<LoaiDichVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDichVu", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDichVu
		{
			get
			{
				return this._MaDichVu;
			}
			set
			{
				if ((this._MaDichVu != value))
				{
					this.OnMaDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaDichVu = value;
					this.SendPropertyChanged("MaDichVu");
					this.OnMaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDichVu", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MaLoaiDichVu
		{
			get
			{
				return this._MaLoaiDichVu;
			}
			set
			{
				if ((this._MaLoaiDichVu != value))
				{
					if (this._LoaiDichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDichVu = value;
					this.SendPropertyChanged("MaLoaiDichVu");
					this.OnMaLoaiDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDichVu", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDichVu
		{
			get
			{
				return this._TenDichVu;
			}
			set
			{
				if ((this._TenDichVu != value))
				{
					this.OnTenDichVuChanging(value);
					this.SendPropertyChanging();
					this._TenDichVu = value;
					this.SendPropertyChanged("TenDichVu");
					this.OnTenDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float NOT NULL")]
		public double Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_DanhSachSuDungDichVu", Storage="_DanhSachSuDungDichVus", ThisKey="MaDichVu", OtherKey="MaDichVu")]
		public EntitySet<DanhSachSuDungDichVu> DanhSachSuDungDichVus
		{
			get
			{
				return this._DanhSachSuDungDichVus;
			}
			set
			{
				this._DanhSachSuDungDichVus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiDichVu_DichVu", Storage="_LoaiDichVu", ThisKey="MaLoaiDichVu", OtherKey="MaLoaiDichVu", IsForeignKey=true)]
		public LoaiDichVu LoaiDichVu
		{
			get
			{
				return this._LoaiDichVu.Entity;
			}
			set
			{
				LoaiDichVu previousValue = this._LoaiDichVu.Entity;
				if (((previousValue != value) 
							|| (this._LoaiDichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiDichVu.Entity = null;
						previousValue.DichVus.Remove(this);
					}
					this._LoaiDichVu.Entity = value;
					if ((value != null))
					{
						value.DichVus.Add(this);
						this._MaLoaiDichVu = value.MaLoaiDichVu;
					}
					else
					{
						this._MaLoaiDichVu = default(string);
					}
					this.SendPropertyChanged("LoaiDichVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachSuDungDichVus(DanhSachSuDungDichVu entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = this;
		}
		
		private void detach_DanhSachSuDungDichVus(DanhSachSuDungDichVu entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoanhThu")]
	public partial class DoanhThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDoanhThu;
		
		private System.DateTime _Ngay;
		
		private double _SoTien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDoanhThuChanging(string value);
    partial void OnMaDoanhThuChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnSoTienChanging(double value);
    partial void OnSoTienChanged();
    #endregion
		
		public DoanhThu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDoanhThu", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDoanhThu
		{
			get
			{
				return this._MaDoanhThu;
			}
			set
			{
				if ((this._MaDoanhThu != value))
				{
					this.OnMaDoanhThuChanging(value);
					this.SendPropertyChanging();
					this._MaDoanhThu = value;
					this.SendPropertyChanged("MaDoanhThu");
					this.OnMaDoanhThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="Float NOT NULL")]
		public double SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHoaDon;
		
		private string _MaDatPhong;
		
		private double _TongTien;
		
		private string _TinhTrangThanhToan;
		
		private EntityRef<ChiTietHoaDon> _ChiTietHoaDon;
		
		private EntityRef<DatPhong> _DatPhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(string value);
    partial void OnMaHoaDonChanged();
    partial void OnMaDatPhongChanging(string value);
    partial void OnMaDatPhongChanged();
    partial void OnTongTienChanging(double value);
    partial void OnTongTienChanged();
    partial void OnTinhTrangThanhToanChanging(string value);
    partial void OnTinhTrangThanhToanChanged();
    #endregion
		
		public HoaDon()
		{
			this._ChiTietHoaDon = default(EntityRef<ChiTietHoaDon>);
			this._DatPhong = default(EntityRef<DatPhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MaDatPhong
		{
			get
			{
				return this._MaDatPhong;
			}
			set
			{
				if ((this._MaDatPhong != value))
				{
					if (this._DatPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._MaDatPhong = value;
					this.SendPropertyChanged("MaDatPhong");
					this.OnMaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float NOT NULL")]
		public double TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangThanhToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TinhTrangThanhToan
		{
			get
			{
				return this._TinhTrangThanhToan;
			}
			set
			{
				if ((this._TinhTrangThanhToan != value))
				{
					this.OnTinhTrangThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangThanhToan = value;
					this.SendPropertyChanged("TinhTrangThanhToan");
					this.OnTinhTrangThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_ChiTietHoaDon", ThisKey="MaHoaDon", OtherKey="MaHoaDon", IsUnique=true, IsForeignKey=false)]
		public ChiTietHoaDon ChiTietHoaDon
		{
			get
			{
				return this._ChiTietHoaDon.Entity;
			}
			set
			{
				ChiTietHoaDon previousValue = this._ChiTietHoaDon.Entity;
				if (((previousValue != value) 
							|| (this._ChiTietHoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiTietHoaDon.Entity = null;
						previousValue.HoaDon = null;
					}
					this._ChiTietHoaDon.Entity = value;
					if ((value != null))
					{
						value.HoaDon = this;
					}
					this.SendPropertyChanged("ChiTietHoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_HoaDon", Storage="_DatPhong", ThisKey="MaDatPhong", OtherKey="MaDatPhong", IsForeignKey=true)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaDatPhong = value.MaDatPhong;
					}
					else
					{
						this._MaDatPhong = default(string);
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhachHang;
		
		private string _MaDichVu;
		
		private string _TenKhachHang;
		
		private string _CCCD;
		
		private string _Email;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private EntitySet<ChiTietDatPhong> _ChiTietDatPhongs;
		
		private EntitySet<DatPhong> _DatPhongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachHangChanging(string value);
    partial void OnMaKhachHangChanged();
    partial void OnMaDichVuChanging(string value);
    partial void OnMaDichVuChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KhachHang()
		{
			this._ChiTietDatPhongs = new EntitySet<ChiTietDatPhong>(new Action<ChiTietDatPhong>(this.attach_ChiTietDatPhongs), new Action<ChiTietDatPhong>(this.detach_ChiTietDatPhongs));
			this._DatPhongs = new EntitySet<DatPhong>(new Action<DatPhong>(this.attach_DatPhongs), new Action<DatPhong>(this.detach_DatPhongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDichVu", DbType="NVarChar(10)")]
		public string MaDichVu
		{
			get
			{
				return this._MaDichVu;
			}
			set
			{
				if ((this._MaDichVu != value))
				{
					this.OnMaDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaDichVu = value;
					this.SendPropertyChanged("MaDichVu");
					this.OnMaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="NVarChar(12)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietDatPhong", Storage="_ChiTietDatPhongs", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<ChiTietDatPhong> ChiTietDatPhongs
		{
			get
			{
				return this._ChiTietDatPhongs;
			}
			set
			{
				this._ChiTietDatPhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatPhong", Storage="_DatPhongs", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<DatPhong> DatPhongs
		{
			get
			{
				return this._DatPhongs;
			}
			set
			{
				this._DatPhongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatPhongs(ChiTietDatPhong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_ChiTietDatPhongs(ChiTietDatPhong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiDichVu")]
	public partial class LoaiDichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiDichVu;
		
		private string _TenLoaiDichVu;
		
		private string _MaLoaiPhong;
		
		private EntitySet<DichVu> _DichVus;
		
		private EntityRef<LoaiPhong> _LoaiPhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiDichVuChanging(string value);
    partial void OnMaLoaiDichVuChanged();
    partial void OnTenLoaiDichVuChanging(string value);
    partial void OnTenLoaiDichVuChanged();
    partial void OnMaLoaiPhongChanging(string value);
    partial void OnMaLoaiPhongChanged();
    #endregion
		
		public LoaiDichVu()
		{
			this._DichVus = new EntitySet<DichVu>(new Action<DichVu>(this.attach_DichVus), new Action<DichVu>(this.detach_DichVus));
			this._LoaiPhong = default(EntityRef<LoaiPhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDichVu", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiDichVu
		{
			get
			{
				return this._MaLoaiDichVu;
			}
			set
			{
				if ((this._MaLoaiDichVu != value))
				{
					this.OnMaLoaiDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDichVu = value;
					this.SendPropertyChanged("MaLoaiDichVu");
					this.OnMaLoaiDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiDichVu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoaiDichVu
		{
			get
			{
				return this._TenLoaiDichVu;
			}
			set
			{
				if ((this._TenLoaiDichVu != value))
				{
					this.OnTenLoaiDichVuChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiDichVu = value;
					this.SendPropertyChanged("TenLoaiDichVu");
					this.OnTenLoaiDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MaLoaiPhong
		{
			get
			{
				return this._MaLoaiPhong;
			}
			set
			{
				if ((this._MaLoaiPhong != value))
				{
					if (this._LoaiPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiPhong = value;
					this.SendPropertyChanged("MaLoaiPhong");
					this.OnMaLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiDichVu_DichVu", Storage="_DichVus", ThisKey="MaLoaiDichVu", OtherKey="MaLoaiDichVu")]
		public EntitySet<DichVu> DichVus
		{
			get
			{
				return this._DichVus;
			}
			set
			{
				this._DichVus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_LoaiDichVu", Storage="_LoaiPhong", ThisKey="MaLoaiPhong", OtherKey="MaLoaiPhong", IsForeignKey=true)]
		public LoaiPhong LoaiPhong
		{
			get
			{
				return this._LoaiPhong.Entity;
			}
			set
			{
				LoaiPhong previousValue = this._LoaiPhong.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhong.Entity = null;
						previousValue.LoaiDichVus.Remove(this);
					}
					this._LoaiPhong.Entity = value;
					if ((value != null))
					{
						value.LoaiDichVus.Add(this);
						this._MaLoaiPhong = value.MaLoaiPhong;
					}
					else
					{
						this._MaLoaiPhong = default(string);
					}
					this.SendPropertyChanged("LoaiPhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DichVus(DichVu entity)
		{
			this.SendPropertyChanging();
			entity.LoaiDichVu = this;
		}
		
		private void detach_DichVus(DichVu entity)
		{
			this.SendPropertyChanging();
			entity.LoaiDichVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiPhong")]
	public partial class LoaiPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiPhong;
		
		private string _TenLoaiPhong;
		
		private double _Gia;
		
		private EntitySet<ChiTietDatPhong> _ChiTietDatPhongs;
		
		private EntitySet<LoaiDichVu> _LoaiDichVus;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiPhongChanging(string value);
    partial void OnMaLoaiPhongChanged();
    partial void OnTenLoaiPhongChanging(string value);
    partial void OnTenLoaiPhongChanged();
    partial void OnGiaChanging(double value);
    partial void OnGiaChanged();
    #endregion
		
		public LoaiPhong()
		{
			this._ChiTietDatPhongs = new EntitySet<ChiTietDatPhong>(new Action<ChiTietDatPhong>(this.attach_ChiTietDatPhongs), new Action<ChiTietDatPhong>(this.detach_ChiTietDatPhongs));
			this._LoaiDichVus = new EntitySet<LoaiDichVu>(new Action<LoaiDichVu>(this.attach_LoaiDichVus), new Action<LoaiDichVu>(this.detach_LoaiDichVus));
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiPhong
		{
			get
			{
				return this._MaLoaiPhong;
			}
			set
			{
				if ((this._MaLoaiPhong != value))
				{
					this.OnMaLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiPhong = value;
					this.SendPropertyChanged("MaLoaiPhong");
					this.OnMaLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiPhong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoaiPhong
		{
			get
			{
				return this._TenLoaiPhong;
			}
			set
			{
				if ((this._TenLoaiPhong != value))
				{
					this.OnTenLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiPhong = value;
					this.SendPropertyChanged("TenLoaiPhong");
					this.OnTenLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float NOT NULL")]
		public double Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_ChiTietDatPhong", Storage="_ChiTietDatPhongs", ThisKey="MaLoaiPhong", OtherKey="MaLoaiPhong")]
		public EntitySet<ChiTietDatPhong> ChiTietDatPhongs
		{
			get
			{
				return this._ChiTietDatPhongs;
			}
			set
			{
				this._ChiTietDatPhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_LoaiDichVu", Storage="_LoaiDichVus", ThisKey="MaLoaiPhong", OtherKey="MaLoaiPhong")]
		public EntitySet<LoaiDichVu> LoaiDichVus
		{
			get
			{
				return this._LoaiDichVus;
			}
			set
			{
				this._LoaiDichVus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_Phongs", ThisKey="MaLoaiPhong", OtherKey="MaLoaiPhong")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatPhongs(ChiTietDatPhong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = this;
		}
		
		private void detach_ChiTietDatPhongs(ChiTietDatPhong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = null;
		}
		
		private void attach_LoaiDichVus(LoaiDichVu entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = this;
		}
		
		private void detach_LoaiDichVus(LoaiDichVu entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = null;
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Luong")]
	public partial class Luong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLuong;
		
		private string _MaNhanVien;
		
		private int _Thang;
		
		private double _SoTien;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLuongChanging(string value);
    partial void OnMaLuongChanged();
    partial void OnMaNhanVienChanging(string value);
    partial void OnMaNhanVienChanged();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnSoTienChanging(double value);
    partial void OnSoTienChanged();
    #endregion
		
		public Luong()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLuong", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLuong
		{
			get
			{
				return this._MaLuong;
			}
			set
			{
				if ((this._MaLuong != value))
				{
					this.OnMaLuongChanging(value);
					this.SendPropertyChanging();
					this._MaLuong = value;
					this.SendPropertyChanged("MaLuong");
					this.OnMaLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL")]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="Float NOT NULL")]
		public double SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_Luong", Storage="_NhanVien", ThisKey="MaNhanVien", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.Luongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.Luongs.Add(this);
						this._MaNhanVien = value.MaNhanVien;
					}
					else
					{
						this._MaNhanVien = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhanVien;
		
		private string _MaPhong;
		
		private string _TenNhanVien;
		
		private string _ChucVu;
		
		private double _Luong;
		
		private EntitySet<Luong> _Luongs;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(string value);
    partial void OnMaNhanVienChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnTenNhanVienChanging(string value);
    partial void OnTenNhanVienChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnLuongChanging(double value);
    partial void OnLuongChanged();
    #endregion
		
		public NhanVien()
		{
			this._Luongs = new EntitySet<Luong>(new Action<Luong>(this.attach_Luongs), new Action<Luong>(this.detach_Luongs));
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NVarChar(10)")]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanVien", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNhanVien
		{
			get
			{
				return this._TenNhanVien;
			}
			set
			{
				if ((this._TenNhanVien != value))
				{
					this.OnTenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenNhanVien = value;
					this.SendPropertyChanged("TenNhanVien");
					this.OnTenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong", DbType="Float NOT NULL")]
		public double Luong
		{
			get
			{
				return this._Luong;
			}
			set
			{
				if ((this._Luong != value))
				{
					this.OnLuongChanging(value);
					this.SendPropertyChanging();
					this._Luong = value;
					this.SendPropertyChanged("Luong");
					this.OnLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_Luong", Storage="_Luongs", ThisKey="MaNhanVien", OtherKey="MaNhanVien")]
		public EntitySet<Luong> Luongs
		{
			get
			{
				return this._Luongs;
			}
			set
			{
				this._Luongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_NhanVien", Storage="_Phong", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Luongs(Luong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_Luongs(Luong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhong;
		
		private string _MaLoaiPhong;
		
		private int _SoPhong;
		
		private string _TinhTrang;
		
		private EntitySet<ChiTietDatPhong> _ChiTietDatPhongs;
		
		private EntitySet<CoSoVatChat> _CoSoVatChats;
		
		private EntitySet<NhanVien> _NhanViens;
		
		private EntityRef<LoaiPhong> _LoaiPhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnMaLoaiPhongChanging(string value);
    partial void OnMaLoaiPhongChanged();
    partial void OnSoPhongChanging(int value);
    partial void OnSoPhongChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public Phong()
		{
			this._ChiTietDatPhongs = new EntitySet<ChiTietDatPhong>(new Action<ChiTietDatPhong>(this.attach_ChiTietDatPhongs), new Action<ChiTietDatPhong>(this.detach_ChiTietDatPhongs));
			this._CoSoVatChats = new EntitySet<CoSoVatChat>(new Action<CoSoVatChat>(this.attach_CoSoVatChats), new Action<CoSoVatChat>(this.detach_CoSoVatChats));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			this._LoaiPhong = default(EntityRef<LoaiPhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MaLoaiPhong
		{
			get
			{
				return this._MaLoaiPhong;
			}
			set
			{
				if ((this._MaLoaiPhong != value))
				{
					if (this._LoaiPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiPhong = value;
					this.SendPropertyChanged("MaLoaiPhong");
					this.OnMaLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhong", DbType="Int NOT NULL")]
		public int SoPhong
		{
			get
			{
				return this._SoPhong;
			}
			set
			{
				if ((this._SoPhong != value))
				{
					this.OnSoPhongChanging(value);
					this.SendPropertyChanging();
					this._SoPhong = value;
					this.SendPropertyChanged("SoPhong");
					this.OnSoPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_ChiTietDatPhong", Storage="_ChiTietDatPhongs", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<ChiTietDatPhong> ChiTietDatPhongs
		{
			get
			{
				return this._ChiTietDatPhongs;
			}
			set
			{
				this._ChiTietDatPhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_CoSoVatChat", Storage="_CoSoVatChats", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<CoSoVatChat> CoSoVatChats
		{
			get
			{
				return this._CoSoVatChats;
			}
			set
			{
				this._CoSoVatChats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_NhanVien", Storage="_NhanViens", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_LoaiPhong", ThisKey="MaLoaiPhong", OtherKey="MaLoaiPhong", IsForeignKey=true)]
		public LoaiPhong LoaiPhong
		{
			get
			{
				return this._LoaiPhong.Entity;
			}
			set
			{
				LoaiPhong previousValue = this._LoaiPhong.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhong.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._LoaiPhong.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._MaLoaiPhong = value.MaLoaiPhong;
					}
					else
					{
						this._MaLoaiPhong = default(string);
					}
					this.SendPropertyChanged("LoaiPhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatPhongs(ChiTietDatPhong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_ChiTietDatPhongs(ChiTietDatPhong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_CoSoVatChats(CoSoVatChat entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_CoSoVatChats(CoSoVatChat entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TraPhong")]
	public partial class TraPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTraPhong;
		
		private string _MaDatPhong;
		
		private System.DateTime _NgayTra;
		
		private double _TienDatCoc;
		
		private EntityRef<DatPhong> _DatPhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTraPhongChanging(string value);
    partial void OnMaTraPhongChanged();
    partial void OnMaDatPhongChanging(string value);
    partial void OnMaDatPhongChanged();
    partial void OnNgayTraChanging(System.DateTime value);
    partial void OnNgayTraChanged();
    partial void OnTienDatCocChanging(double value);
    partial void OnTienDatCocChanged();
    #endregion
		
		public TraPhong()
		{
			this._DatPhong = default(EntityRef<DatPhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTraPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTraPhong
		{
			get
			{
				return this._MaTraPhong;
			}
			set
			{
				if ((this._MaTraPhong != value))
				{
					this.OnMaTraPhongChanging(value);
					this.SendPropertyChanging();
					this._MaTraPhong = value;
					this.SendPropertyChanged("MaTraPhong");
					this.OnMaTraPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MaDatPhong
		{
			get
			{
				return this._MaDatPhong;
			}
			set
			{
				if ((this._MaDatPhong != value))
				{
					if (this._DatPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._MaDatPhong = value;
					this.SendPropertyChanged("MaDatPhong");
					this.OnMaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="Date NOT NULL")]
		public System.DateTime NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienDatCoc", DbType="Float NOT NULL")]
		public double TienDatCoc
		{
			get
			{
				return this._TienDatCoc;
			}
			set
			{
				if ((this._TienDatCoc != value))
				{
					this.OnTienDatCocChanging(value);
					this.SendPropertyChanging();
					this._TienDatCoc = value;
					this.SendPropertyChanged("TienDatCoc");
					this.OnTienDatCocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_TraPhong", Storage="_DatPhong", ThisKey="MaDatPhong", OtherKey="MaDatPhong", IsForeignKey=true)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.TraPhongs.Remove(this);
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.TraPhongs.Add(this);
						this._MaDatPhong = value.MaDatPhong;
					}
					else
					{
						this._MaDatPhong = default(string);
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
